%p
  - @search.each do |tweet|
    %tr
      %td= tweet.text
  end
!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %title Know Your Rights
    %link{:href => "/assets/stylesheets/show.css", :media => "screen", :rel => "stylesheet", :type => "text/css"}/
  %body
    #tfheader
      %h1 Know Your Rights
      %form#tfnewsearch{:action => "http://www.google.com", :method => "get"}
        %input.tftextinput{:maxlength => "120", :name => "q", :size => "21", :type => "text"}/
        %input.tfbutton{:type => "submit", :value => "search"}/
      .tfclear
    
%div{:style => "width:100%;"}
  .left-side{:style => "width:0%"}
  %h2{:style => "padding:5px; font-size:18px; color:black"} Details about #{@protest.title}
  %h3{:style => "padding:5px; font-size:18px; color:black"}= link_to 'Back to home page', protests_path

  %h3 Description:
  %p#description= @protest.description
  %h3 Protest Location:
  %p#location= @protest.location
  %h3 Date and Time:
  %p#date= @protest.event_date.strftime("%B %d, %Y at %H:%M")

%head
  // %script{:src => "//maps.google.com/maps/api/js?key=AIzaSyDHDuR9mVRJ9RdnfALd3tISh7aWSfRxfBE"}
  // %script{:src => "//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"}
  // %script{:src => "//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js", :type => "text/javascript"}
  // :javascript
  //   function initialize() {
  //       var map_canvas = document.getElementById('map_canvas');
  //       var map_options = {
  //           center: new google.maps.LatLng(37.8716, -122.2727),
  //           zoom: 11,
  //           mapTypeId: google.maps.MapTypeId.ROADMAP
  //       }
  //       var map = new google.maps.Map(map_canvas, map_options);
  //   }
  //   google.maps.event.addDomListener(window, 'load', initialize);

  //   function addMarker(location) {
  //       marker = new google.maps.Marker({
  //           position: location,
  //           map: map
  //       });
  //   }
    
!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:content => "initial-scale=1.0, user-scalable=no", :name => "viewport"}/
    %meta{:charset => "utf-8"}/
    %title Places Searchbox
    :css
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 70%;
        width: 50%;
        margin-left:auto; 
      	margin-right:auto;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      .controls {
        margin-top: 10px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 300px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
      #target {
        width: 345px;
      }
  %body
    %input#pac-input.controls{:value => @protest.location, :type => "text"}/
    #map
    :javascript
      // This example adds a search box to a map, using the Google Place Autocomplete
      // feature. People can enter geographical searches. The search box will return a
      // pick list containing a mix of places and predicted search terms.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 37.8716, lng: -122.2727},
          zoom: 13,
          mapTypeId: 'roadmap'
        });

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
        // google.maps.event.trigger(searchBox, 'places_changed');
      }
    %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyDHDuR9mVRJ9RdnfALd3tISh7aWSfRxfBE&libraries=places&callback=initAutocomplete"}

%body{:align => "center" }
  .right-side{:style => "center, width:30%;"}
  -if user_signed_in?
    = link_to 'Edit this event', edit_protest_path(@protest)
    = button_to 'Delete this event', protest_path(@protest), :method => :delete, :confirm => 'Are you sure?'
  %h2{:style => "padding:5px; font-size:18px; color:black"} #The Cause
  %p
    Real time news feed from Twitter here.
  %div
  %marquee{:bgcolor => "#ffffff", :direction => "up", :loop => "-1", :onmouseout => "this.scrollAmount=2", :onmouseover => "this.scrollAmount=0", :scrollamount => "2", :width => "50%"}
    %center
      %font{:color => "#000000", :size => "+1"} Cal 
      %p
        %font{:color => "#000000", :size => "+1"} Hacks 3.0
      %p
        %font{:color => "#000000", :size => "+1"} is
      %p
        %font{:color => "#000000 ", :size => "+1"} the
      %p
        %font{:color => "#000000 ", :size => "+1"} way
      %p
        %font{:color => "#000000", :size => "+1"} to
      %p
        %font{:color => "#000000", :size => "+1"} go!
  %p Want to know more about your rights? Get details at      
  %link{:href => "https://www.aclunc.org/our-work/know-your-rights/free-speech-protests-demonstrations"}/
  %div{:style => "width:150px; height:150px; line-height:3em; overflow:auto; padding:5px;"}
 


